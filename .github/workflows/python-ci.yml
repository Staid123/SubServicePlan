name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      database:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }}" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

      test_database:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U postgres" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Start FastAPI service
      run: docker-compose up -d fastapi_app

    - name: Wait for services to be healthy
      run: |
        docker-compose run fastapi_app sh -c "until pg_isready -h database -U ${{ secrets.POSTGRES_USER }}; do sleep 1; done"
        docker-compose run fastapi_app sh -c "until pg_isready -h test_database -U postgres; do sleep 1
