name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file
      run: |
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" > .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_TEST_PORT=${{ secrets.POSTGRES_TEST_PORT }}" >> .env
        echo "POSTGRES_TEST_DB=${{ secrets.POSTGRES_TEST_DB }}" >> .env
        echo "POSTGRES_TEST_USER=${{ secrets.POSTGRES_TEST_USER }}" >> .env
        echo "POSTGRES_TEST_PASSWORD=${{ secrets.POSTGRES_TEST_PASSWORD }}" >> .env

    - name: Start services with Docker Compose
      run: docker-compose up -d

    # - name: Wait for database to be ready
    #   run: |
    #     until docker-compose exec database pg_isready -U ${{ secrets.POSTGRES_USER }}; do
    #       echo "Waiting for database...";
    #       sleep 5;
    #     done

    - name: Run tests with pytest
      run: pytest -s -v

    - name: Shut down services
      run: docker-compose down
